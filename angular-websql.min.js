"use strict";angular.module("angular-websql",[]).factory("$webSql",[function(){return{openDatabase:function(dbName,version,desc,size){if(typeof openDatabase=="undefined"){throw"Browser does not support web sql"}try{var db=window&&"sqlitePlugin"in window?window.sqlitePlugin.openDatabase({name:dbName}):window.openDatabase(dbName,version,desc,size);return{executeQuery:function(query,bindings,callback){db.transaction(function(tx){tx.executeSql(query,bindings,function(tx,results){if(callback){var cleanedResults=[];if(results&&"rows"in results&&results.rows.length){for(var i=0;i<results.rows.length;i++){cleanedResults.push(results.rows.item(i));callback(cleanedResults)}}else{callback(cleanedResults)}}},function(errorResp){console.error(errorResp);if(callback){callback([])}})});return this},index:function(tableName,indexName,columns,unique,callback){var query="CREATE {unique} INDEX IF NOT EXISTS `{indexName}` ON `{tableName}`({columns})";this.executeQuery(this.replace(query,{"{unique}":!!unique?"UNIQUE":"","{indexName}":indexName,"{tableName}":tableName,"{columns}":columns.join(",")}),[],callback);return this},insert:function(tableName,objToInsert,callback){var query="INSERT INTO `{tableName}` ({columns}) VALUES({values}); ",columns=Object.keys(objToInsert).join(","),values=Object.keys(objToInsert).map(function(){return"?"}).join(","),bindings=Object.keys(objToInsert).map(function(entry){return objToInsert[entry]});this.executeQuery(this.replace(query,{"{tableName}":tableName,"{columns}":columns,"{values}":values}),bindings,callback);return this},update:function(tableName,valuesToUpdate,condition,callback){var query="UPDATE `{tableName}` SET {update} WHERE {where}; ";var updateValue="";for(var entry in valuesToUpdate){if(valuesToUpdate.hasOwnProperty(entry)){updateValue+="`"+entry+"`='"+valuesToUpdate[entry]+"'"}}var whereCondition=this.whereClause(condition);this.executeQuery(this.replace(query,{"{tableName}":tableName,"{update}":updateValue,"{where}":whereCondition}),[],callback);return this},del:function(tableName,condition,callback){var query="DELETE FROM `{tableName}` WHERE {where}; ";var whereCondition=this.whereClause(condition);this.executeQuery(this.replace(query,{"{tableName}":tableName,"{where}":whereCondition}),[],callback);return this},select:function(tableName,condition,callback){var query="SELECT * FROM `{tableName}` WHERE {where}; ";var whereCondition=this.whereClause(condition);this.executeQuery(this.replace(query,{"{tableName}":tableName,"{where}":whereCondition}),[],callback);return this},orderedSelect:function(tableName,condition,orderBy,ascending,callback){var query="SELECT * FROM `{tableName}` WHERE {where} ORDER BY {orderBy} {sortOrder}; ";var whereCondition=this.whereClause(condition);this.executeQuery(this.replace(query,{"{tableName}":tableName,"{where}":whereCondition,"{orderBy}":orderBy,"{sortOrder}":!!ascending?"ASC":"DESC"}),[],callback);return this},limitedOrderedSelect:function(tableName,condition,orderBy,ascending,limit,callback){var query="SELECT * FROM `{tableName}` WHERE {where} ORDER BY {orderBy} {sortOrder} LIMIT {limit}; ";var whereCondition=this.whereClause(condition);this.executeQuery(this.replace(query,{"{tableName}":tableName,"{where}":whereCondition,"{orderBy}":orderBy,"{sortOrder}":!!ascending?"ASC":"DESC","{limit}":limit}),[],callback);return this},selectAll:function(tableName,callback){this.executeQuery("SELECT * FROM `"+tableName+"`; ",[],callback);return this},whereClause:function(conditions){var compiledWhereClause="";for(var entry in conditions){if(conditions.hasOwnProperty(entry)){compiledWhereClause+=typeof conditions[entry]==="object"?typeof conditions[entry]["union"]==="undefined"?typeof conditions[entry]["value"]==="string"&&conditions[entry]["value"].match(/NULL/gi)?"`"+entry+"` "+conditions[entry]["value"]:"`"+entry+"` "+conditions[entry]["operator"]+(conditions[entry]["operator"]=="IN"?" "+conditions[entry]["value"]:" "+conditions[entry]["value"]+""):typeof conditions[entry]["value"]==="string"&&conditions[entry]["value"].match(/NULL/gi)?"`"+entry+"` "+conditions[entry]["value"]+" "+conditions[entry]["union"]+" ":"`"+entry+"` "+conditions[entry]["operator"]+" '"+conditions[entry]["value"]+"' "+conditions[entry]["union"]+" ":typeof conditions[entry]==="string"&&conditions[entry].match(/NULL/gi)?"`"+entry+"` "+conditions[entry]:"`"+entry+"`='"+conditions[entry]+"'"}}return compiledWhereClause},replace:function(templateString,valuesToReplace){for(var entry in valuesToReplace){if(valuesToReplace.hasOwnProperty(entry)){templateString=templateString.replace(new RegExp(entry,"ig"),valuesToReplace[entry])}}return templateString},createTable:function(tableName,fields,callback){var query="CREATE TABLE IF NOT EXISTS `{tableName}` ({fields}); ";var c=[];var columns="";for(var field in fields){if(fields.hasOwnProperty(field)){var l="{type} {null}";columns+="`"+field+"` ";for(var k in fields[field]){if(fields[field].hasOwnProperty(k)){l=l.replace(new RegExp("{"+k+"}","ig"),fields[field][k])}}columns+=l;if(typeof fields[field]["default"]!=="undefined"){columns+=" DEFAULT "+fields[field]["default"]}if(typeof fields[field]["primary"]!=="undefined"){columns+=" PRIMARY KEY"}if(typeof fields[field]["auto_increment"]!=="undefined"){columns+=" AUTOINCREMENT"}if(Object.keys(fields)[Object.keys(fields).length-1]!=field){columns+=","}if(typeof fields[field]["primary"]!=="undefined"&&fields[field]["primary"]){c.push(field)}}}var valuesToReplace={tableName:tableName,fields:columns};for(var entry in valuesToReplace){if(valuesToReplace.hasOwnProperty(entry)){query=query.replace(new RegExp("{"+entry+"}","ig"),valuesToReplace[entry])}}this.executeQuery(query,[],callback);return this},dropTable:function(tableName,callback){this.executeQuery("DROP TABLE IF EXISTS `"+tableName+"`; ",[],callback);return this}}}catch(err){console.error(err)}}}}]);